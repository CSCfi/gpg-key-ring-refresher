#!/bin/bash
#
# SPDX-FileCopyrightText: 2024- Mika Silander (mika.silander@csc.fi) and CSC - IT Center of Science Ltd (www.csc.fi)
#
# SPDX-License-Identifier: MIT
#
# For info on SPDX, see https://spdx.org
#

DIRECTORYROTATOR=directory-rotator

function usage() {
    command=$(basename "$1")
    cat <<USAGE

    $command [ -h | --help | -? ] [ -s skip_pattern ]
              max_rot_num  source_dir  target_dir

    Options:
      -h = this help
      -s = skip pattern defining file and directory names that are ignored in comparison,
           note: syntax is what diff -x expects.

    max_rot_num = maximum number of rotated directories retained
    source_dir  = the source directory being tracked
    target_dir  = the target directory under which the source directory gets copied

    v0.1.5

USAGE
}

COMMAND=$0
DIFFPATTERN=""
RSYNCPATTERN=""

while [ $# -gt 0 ]; do
    case "$1" in

        -h|--help|"-?")
            usage $COMMAND
            exit 0
            ;;

        -s|--skip)
	    shift
            DIFFPATTERN="-x $1"
	    RSYNCPATTERN="--exclude=$1"
            shift
            break
            ;;
        *)
            break
            ;;
    esac
done

if [ $# -ne 3 ]; then
    echo "Define a rotation count, a source and a target directory."
    usage $COMMAND
    exit 1
fi

ROTNUM=$1

if [ $(echo -n $ROTNUM | grep -c -E '^[1-9][0-9]*$') -ne 1 ]; then
    echo "Expecting a positive maximum number of rotations to retain: $ROTNUM given."
    usage $COMMAND
    exit 1
fi

if [ ! -d "$2" ]; then
    echo "$2 - source directory does not exist."
    usage $COMMAND
    exit 1
fi

# Ensure the availability of directory-rotator
which $DIRECTORYROTATOR > /dev/null 2>&1
if [ $? -ne 0 ]; then
    DIRECTORYROTATOR=/usr/local/sbin/directory-rotator
fi

# We remove trailing slashes due to rsync ...
SRCDIR=$(echo -n "$2" | sed 's/\([^\/]\)\/*$/\1/g')
BASEDIR=$(basename "$SRCDIR")
TGTDIR=$(echo -n "$3" | sed 's/\([^\/]\)\/*$/\1/g')

if [ ! -d "$TGTDIR" ]; then
    # We have no target directory to compare to: we can
    # simply copy the source dir to the target dir without
    # any rotations.
    mkdir -p "$TGTDIR"
    rsync -a $RSYNCPATTERN "$SRCDIR" "$TGTDIR"
    exit $?
fi

# We create the target/basedir if it does not exist,
# so that the diff comparison fails at most with exit code 1 (not 2).
if [ ! -d "$TGTDIR/$BASEDIR" ]; then
    mkdir -p "$TGTDIR/$BASEDIR"
fi

# We have an existing target directory. This directory just tracks
# the source directory: check if the source directory has changed
# wrt to the tracking target directory.

diff $DIFFPATTERN -q -r "$SRCDIR" "$TGTDIR/$BASEDIR" > /dev/null 2>&1
DIFFSTATUS=$?

if [ $DIFFSTATUS -eq 1 ]; then
    # Source dir has changed wrt the tracking, target directory.
    # First we save the current tracking directory by including
    # it in the rotation cycle.
    $DIRECTORYROTATOR $ROTNUM "$TGTDIR/$BASEDIR" > /dev/null 2>&1
    if [ $? -ne 0 ]; then
	exit $?
    fi
    # We then copy the newest dir to be the current (most recent) dir.
    # IOW, it is the rotateable copy of the current, most recent dir tracked.
    rsync -a $RSYNCPATTERN "$SRCDIR" "$TGTDIR"
    exit $?
fi

# DIFFSTATUS = 0 i.e. no changes => no need to copy nor rotate, or,
# DIFFSTATUS = 2 which is a bigger problem which cron will cough into an email.
exit $DIFFSTATUS
